<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.zhangchf.mytestapp">

    <uses-permission android:name="android.permission.READ_CALENDAR" />
    <uses-permission android:name="android.permission.WRITE_CALENDAR" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <application
        android:allowBackup="true"
        android:name=".MyApplication"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <activity
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:excludeFromRecents="true"
            android:theme="@style/AppTheme.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <!-- Accepts URIs that begin with "http://www.example.com/gizmos” -->
                <data
                    android:host="www.example.com"
                    android:pathPrefix="/gizmos"
                    android:scheme="http" />
                <!-- note that the leading "/" is required for pathPrefix -->
                <!-- Accepts URIs that begin with "example://gizmos” -->
                <data
                    android:host="gizmos"
                    android:scheme="example" />
            </intent-filter>
        </activity>
        <activity android:name=".LauncherActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity android:name=".LiveCameraActivity" />

        <meta-data
            android:name="io.fabric.ApiKey"
            android:value="80cd418d77b68ac63b82ed82270198e63b0a428c" />

        <activity
            android:name=".KotlinActivity"
            android:label="@string/title_activity_kotlin"
            android:theme="@style/AppTheme.NoActionBar"></activity>

        <activity
            android:name=".WebTestActivity"
            android:label="Android Activity"
            android:theme="@style/AppTheme.NoActionBar"></activity>

        <activity android:name=".weex.WeexActivity"
            android:label="Weex Activity"/>

        <activity android:name=".UITestActivity"
            android:parentActivityName=".MainActivity"/>

        <service android:name=".NotificationIntentService"/>

        <!--AlarmService is running in the same process or not doesn't matter for sending notification after app exit.-->
        <!--stopWithTasks flag doesn't matter either. service.onTaskRemoved() will always be called when app is killed-->
        <service android:name=".AlarmService"
            android:stopWithTask="false"
            android:process=":alaramService"/>

        <!--AlarmReceiver is running in the same process or not doesn't matter for sending notification after app exit.-->
        <receiver android:name=".AlarmReceiver"
            android:process=":alarmReceiver">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
                <action android:name="com.example.zhangchf.mytestapp.SCHEDULE_NOTIFICATION" />
            </intent-filter>
        </receiver>

    </application>

</manifest>